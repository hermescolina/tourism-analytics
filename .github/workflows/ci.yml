---
name: CI Tests & Lint

on:
  push:
    branches:
      - main
      - dev
      - staging
  pull_request:
    branches:
      - main
      - dev
      - staging

jobs:
  backend:
    name: "Backend: lint + pytest"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend deps
        run: |
          pip install --upgrade pip
          pip install flake8
          test -f backend/tour_api/requirements.txt && pip install -r backend/tour_api/requirements.txt || echo "No tour_api reqs"
          test -f backend/hotel_api/requirements.txt && pip install -r backend/hotel_api/requirements.txt || echo "No hotel_api reqs"
          test -f backend/car_api/requirements.txt && pip install -r backend/car_api/requirements.txt || echo "No car_api reqs"

      - name: Lint backend
        run: |
          FAIL=0
          flake8 backend/tour_api || FAIL=1
          flake8 backend/hotel_api || FAIL=1
          flake8 backend/car_api || FAIL=1
          exit $FAIL

      - name: Test backend
        run: |
          pytest backend/tour_api || true
          pytest backend/hotel_api || true
          pytest backend/car_api || true

  frontend:
    name: "Frontend: lint + test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install frontend deps
        run: npm install
        working-directory: frontend

      - name: Lint frontend
        run: npm run lint
        working-directory: frontend

      - name: Run frontend tests
        run: npm test
        working-directory: frontend

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    environment:
      name: staging
      url: https://staging.tourwise.shop 
    steps:
      - name: Mark deployment as successful
        run: echo "Simulated deployment to staging complete"

        # Optional, update to your actual staging URL upon successful deployment